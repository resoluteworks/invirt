"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[782],{6242:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(4848),n=t(8453);const a={sidebar_position:2},o="Static Assets",r={id:"framework/static-assets",title:"Static Assets",description:"Http4k provides out of the box a set of components for serving static assets",source:"@site/docs/framework/static-assets.md",sourceDirName:"framework",slug:"/framework/static-assets",permalink:"/docs/framework/static-assets",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"frameworkSidebar",previous:{title:"Pebble Views Wiring",permalink:"/docs/framework/views-wiring"},next:{title:"Current HTTP Request",permalink:"/docs/framework/current-request"}},c={},l=[{value:"Assets version",id:"assets-version",level:3},{value:"Caching",id:"caching",level:3},{value:"Hot reload vs classpath loading",id:"hot-reload-vs-classpath-loading",level:3}];function d(e){const s={a:"a",admonition:"admonition",code:"code",h1:"h1",h3:"h3",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"static-assets",children:"Static Assets"}),"\n",(0,i.jsx)(s.admonition,{type:"note",children:(0,i.jsx)(s.mdxAdmonitionTitle,{children:(0,i.jsx)(s.a,{href:"https://github.com/resoluteworks/invirt/tree/main/examples/static-assets",children:"Example application"})})}),"\n",(0,i.jsxs)(s.p,{children:["Http4k provides out of the box a set of components for ",(0,i.jsx)(s.a,{href:"https://www.http4k.org/guide/reference/core/#serving_static_assets",children:"serving static assets"}),"\nand Invirt only adds a few utilities to make caching and versioning easier."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-kotlin",children:'val assetsVersion = gitCommitId()\nval developmentMode = Environment.ENV.developmentMode\n\ninitialiseInvirtViews(\n    hotReload = developmentMode,\n    staticAssetsVersion = assetsVersion\n)\n\nval appHandler = InvirtFilter().then(\n    routes(\n        "/static/${assetsVersion}" bind cacheDays(365).then(staticAssets(developmentMode))\n    )\n)\n'})}),"\n",(0,i.jsx)(s.h3,{id:"assets-version",children:"Assets version"}),"\n",(0,i.jsxs)(s.p,{children:["The first key element here is ",(0,i.jsx)(s.code,{children:"assetsVersion"})," which is passed to the ",(0,i.jsx)(s.code,{children:"initialiseInvirtViews()"}),", discussed previously in\n",(0,i.jsx)(s.a,{href:"/docs/framework/views-wiring",children:"Pebble Views Wiring"}),". Using this value for the ",(0,i.jsx)(s.code,{children:'"/static/${assetsVersion}"'})," route\nthen allows the Pebble template code to include assets dynamically, as per example below."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-html",children:'<script src="/static/{{ staticAssetsVersion }}/app.js"><\/script>\n'})}),"\n",(0,i.jsxs)(s.p,{children:[(0,i.jsx)(s.code,{children:"staticAssetsVersion"})," is a global Pebble templates variable exposed by Invirt, and is read from the\nvalue set when calling ",(0,i.jsx)(s.code,{children:"initialiseInvirtViews()"})]}),"\n",(0,i.jsxs)(s.p,{children:["It's possible to use the Git commit id to version static assets, which is achieved by a call to ",(0,i.jsx)(s.code,{children:"gitCommitId()"}),",\nas per example above. This function is discussed in detail ",(0,i.jsx)(s.a,{href:"/docs/api/invirt-core/environment#gitcommitid",children:"here"}),"."]}),"\n",(0,i.jsx)(s.h3,{id:"caching",children:"Caching"}),"\n",(0,i.jsxs)(s.p,{children:["The function ",(0,i.jsx)(s.code,{children:"cacheDays(days)"})," is a simple wrapper over http4k's built-in caching filter and only exists\nas a convenience over the construct below."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-kotlin",children:"CachingFilters.Response.MaxAge(Clock.systemUTC(), Duration.ofDays(days.toLong()))\n"})}),"\n",(0,i.jsx)(s.h3,{id:"hot-reload-vs-classpath-loading",children:"Hot reload vs classpath loading"}),"\n",(0,i.jsxs)(s.p,{children:["The function ",(0,i.jsx)(s.code,{children:"staticAssets()"})," is a simple wrapper over http4k's components, that allows easily switching between\nhot reload and caching classpath loading of static assets, similarly to how\n",(0,i.jsx)(s.a,{href:"/docs/framework/views-wiring#dynamic-hot-reload",children:"views are loaded"}),"."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-kotlin",children:'fun staticAssets(\n    hotReload: Boolean,\n    classpathLocation: String = "webapp/static",\n    directory: String = "src/main/resources/webapp/static"\n): RoutingHttpHandler\n'})})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>r});var i=t(6540);const n={},a=i.createContext(n);function o(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);