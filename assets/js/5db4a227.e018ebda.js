"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9414],{4795:(e,a,s)=>{s.r(a),s.d(a,{assets:()=>l,contentTitle:()=>d,default:()=>u,frontMatter:()=>c,metadata:()=>p,toc:()=>h});var i=s(4848),n=s(8453),t=s(3554),r=s.n(t),o=s(7301);const c={sidebar_position:2},d="Example application",p={id:"framework/security/example",title:"Example application",description:"The example application is a very basic setup with a login and a dashboard screen. The so-called dashboard",source:"@site/docs/framework/security/example.md",sourceDirName:"framework/security",slug:"/framework/security/example",permalink:"/docs/framework/security/example",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"frameworkSidebar",previous:{title:"Core concepts",permalink:"/docs/framework/security/core-concepts"}},l={},h=[];function m(e){const a={a:"a",code:"code",h1:"h1",p:"p",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(a.h1,{id:"example-application",children:"Example application"}),"\n",(0,i.jsx)(a.p,{children:"The example application is a very basic setup with a login and a dashboard screen. The so-called dashboard\nis configured to only be accessible by a logged in user, and it simply displays the user's email and role."}),"\n",(0,i.jsx)(r(),{playing:!0,controls:!0,url:"/img/security-authentication-demo-app.mp4"}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(a.p,{children:["As discussed in the ",(0,i.jsx)(a.a,{href:"/docs/framework/security/overview",children:"Overview"})," section, the setup we're after is roughly\nbased on the diagram below. The core Invirt Security components used in this example application\nare discussed in the ",(0,i.jsx)(a.a,{href:"/docs/framework/security/core-concepts",children:"previous section"}),"."]}),"\n",(0,i.jsx)("img",{src:o.A}),"\n",(0,i.jsxs)(a.p,{children:["The steps 1/2/3 performed by the Authenticator implementation above would typically be delegated\nto an external component or a third-party authentication provider. In order to keep this example easy\nto run and reason about, we've implemented a mock in-memory user and session management in the ",(0,i.jsx)(a.code,{children:"AuthenticationService"}),"\ncomponent."]}),"\n",(0,i.jsxs)(a.p,{children:["We recommend having a look at the ",(0,i.jsx)(a.a,{href:"https://github.com/resoluteworks/invirt/tree/main/examples/security-authentication",children:"complete example"}),"\nand ",(0,i.jsx)(a.a,{href:"/docs/overview/examples",children:"running it"})," to understand how all of this is wired."]})]})}function u(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,i.jsx)(a,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},7301:(e,a,s)=>{s.d(a,{A:()=>i});const i=s.p+"assets/images/authentication-happy-flow-4e143881653d97ac9b469800b224b685.png"}}]);