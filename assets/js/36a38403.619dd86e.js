"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9683],{3671:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var a=t(4848),i=t(8453);const o={sidebar_position:2},r="Pagination components",s={id:"api/invirt-data/page",title:"Pagination components",description:"Invirt takes a somewhat opinionated approach for the design of pagination components, but",source:"@site/docs/api/invirt-data/page.md",sourceDirName:"api/invirt-data",slug:"/api/invirt-data/page",permalink:"/docs/api/invirt-data/page",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"apiSidebar",previous:{title:"DataFilter",permalink:"/docs/api/invirt-data/data-filter"},next:{title:"Sort",permalink:"/docs/api/invirt-data/sort"}},c={},d=[{value:"Page",id:"page",level:2},{value:"RecordsPage",id:"recordspage",level:2},{value:"Pagination",id:"pagination",level:2}];function l(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"pagination-components",children:"Pagination components"}),"\n",(0,a.jsx)(n.p,{children:"Invirt takes a somewhat opinionated approach for the design of pagination components, but\nan approach that's in line with certain user experience constraints in many applications:"}),"\n",(0,a.jsxs)(n.ul,{children:["\n",(0,a.jsx)(n.li,{children:"The user needs to know the total number of pages for the result set (paging to unknown is not an option)"}),"\n",(0,a.jsx)(n.li,{children:"There is a concept of a first page, current page, and last page"}),"\n",(0,a.jsx)(n.li,{children:"The user needs to know the total number of results in the current query."}),"\n"]}),"\n",(0,a.jsx)(n.h2,{id:"page",children:"Page"}),"\n",(0,a.jsxs)(n.p,{children:["To that effect, the core pagination component is kept very simple. To read a ",(0,a.jsx)(n.code,{children:"Page"})," object from\na ",(0,a.jsx)(n.code,{children:"Request"})," object's query parameters use the ",(0,a.jsx)(n.a,{href:"/docs/api/invirt-core/request-extensions#requestpage",children:"Request.page()"}),"\nextension."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"data class Page(\n    val from: Int,\n    val size: Int\n) {\n\n    /**\n     * Returns the index of the current page relative to the beginning of the\n     * pagination (from = 0).\n     */\n    val pageIndex: Int\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"recordspage",children:"RecordsPage"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"RecordsPage"})," component is an abstract representation of a page of records for a result set.\nThis can be used to serve complete information about a results page, including the total count\nfor the query, the ",(0,a.jsx)(n.a,{href:"#page",children:"Page"})," reference that it was queried with."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-kotlin",children:"data class RecordsPage<T : Any>(\n    val records: List<T>,\n    val totalCount: Long,\n    val page: Page\n) {\n    val pagination = Pagination(page, totalCount)\n}\n"})}),"\n",(0,a.jsx)(n.h2,{id:"pagination",children:"Pagination"}),"\n",(0,a.jsxs)(n.p,{children:["The ",(0,a.jsx)(n.code,{children:"Pagination"})," component defines the logic that can be used to render a pagination control for\na result set. Please check the ",(0,a.jsx)(n.a,{href:"https://github.com/resoluteworks/invirt/blob/main/invirt-data/src/main/kotlin/invirt/data/Pagination.kt",children:"component's documentation"}),"\nfor full details on how this works."]})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>s});var a=t(6540);const i={},o=a.createContext(i);function r(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);