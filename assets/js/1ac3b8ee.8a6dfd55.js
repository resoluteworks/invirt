"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1219],{3128:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>d});var n=r(4848),a=r(8453);const s={sidebar_position:3},i="Sort",o={id:"api/invirt-data/sort",title:"Sort",description:"As most applications require a single sort criteria to be applied at a time, we've kept this",source:"@site/docs/api/invirt-data/sort.md",sourceDirName:"api/invirt-data",slug:"/api/invirt-data/sort",permalink:"/docs/api/invirt-data/sort",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"apiSidebar",previous:{title:"Pagination components",permalink:"/docs/api/invirt-data/page"}},c={},d=[{value:"Sort in query parameters",id:"sort-in-query-parameters",level:2},{value:"Reading sort",id:"reading-sort",level:3},{value:"Manipulating sort",id:"manipulating-sort",level:3}];function l(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"sort",children:"Sort"}),"\n",(0,n.jsx)(t.p,{children:"As most applications require a single sort criteria to be applied at a time, we've kept this\nreally simple, and we leave it to the application to compound sort logic should it require to.\nAlthough, unless you're designing a data analytics platform, it's likely you won't have to."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:"data class Sort(\n    val field: String,\n    val order: SortOrder\n)\n\nenum class SortOrder {\n    ASC,\n    DESC\n}\n"})}),"\n",(0,n.jsx)(t.h2,{id:"sort-in-query-parameters",children:"Sort in query parameters"}),"\n",(0,n.jsxs)(t.p,{children:["Invirt provides a set of utilities for reading and manipulating sort criteria passed as query\nparameters. These are all based on a ",(0,n.jsx)(t.code,{children:"sort"})," query parameter which is hardwired in all these utilities\nand is not configurable (at this stage)."]}),"\n",(0,n.jsx)(t.h3,{id:"reading-sort",children:"Reading sort"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:'"/list-orders" GET { request ->\n    // Create a Sort object from a query parameter sort=name:asc\n    val sort = request.sort() ?: Sort.desc(Order::createdAt.name)\n    ...\n}\n'})}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"\x3c!-- Displays in the template the field we're currently sorting by, based on the sort query param --\x3e\n{{ request.sort.field }}\n\n\x3c!-- Returns true if the current sort query parameter is sort=name:asc --\x3e\n{{ request.sortIs('name', 'asc') }}\n"})}),"\n",(0,n.jsx)(t.h3,{id:"manipulating-sort",children:"Manipulating sort"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-html",children:"\x3c!--\n    Returns a Uri with the sort field replaced to sort=name:asc and resets\n    pagination (last argument, called resetPagination is set to true)\n\n    For example\n        /test?q=john&from=100&size=10&sort=createdAt:desc\n    becomes\n        /test?q=john&sort=name:asc\n--\x3e\n<a href=\"{{ request.replaceSort('name', 'asc', true) }}\">\n    Sort by name ascending\n</a>\n\n\n\x3c!--\n    Returns a Uri with the sort field replaced to createdAt:desc IF a\n    sort for another field is present. If the current sort is for the\n    createdAt field, then it simply reverts its order.\n\n    /test?sort=createdAt:desc \u2192 /test?sort=createdAt:asc\n    /test?sort=name:asc       \u2192 /test?sort=createdAt:desc\n--\x3e\n<a href=\"{{ request.revertOrSetSort('createdAt', 'desc', true) }}\">\n    Created at\n</a>\n"})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const a={},s=n.createContext(a);function i(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);