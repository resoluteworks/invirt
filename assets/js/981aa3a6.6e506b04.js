"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8107],{2089:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var n=r(4848),s=r(8453);const a={sidebar_position:4},i="Filters",o={id:"framework/filters",title:"Filters",description:"These are a set of utility filters that come with Invirt and which you can opt for in your application.",source:"@site/docs/framework/filters.md",sourceDirName:"framework",slug:"/framework/filters",permalink:"/docs/framework/filters",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"frameworkSidebar",previous:{title:"Current HTTP Request",permalink:"/docs/framework/current-request"},next:{title:"Form basics",permalink:"/docs/framework/forms/form-basics"}},l={},c=[{value:"CatchAll",id:"catchall",level:2},{value:"ErrorPages",id:"errorpages",level:2},{value:"StatusOverride",id:"statusoverride",level:2},{value:"HttpAccessLog (Experimental)",id:"httpaccesslog-experimental",level:2}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"filters",children:"Filters"}),"\n",(0,n.jsx)(t.p,{children:"These are a set of utility filters that come with Invirt and which you can opt for in your application."}),"\n",(0,n.jsx)(t.h2,{id:"catchall",children:"CatchAll"}),"\n",(0,n.jsxs)(t.p,{children:["Logs all exceptions and enables mapping exception types to HTTP response statuses.\nWhen an exception is caught that isn't mapped to an HTTP response status a ",(0,n.jsx)(t.code,{children:"Status.INTERNAL_SERVER_ERROR"}),"\nis returned."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:"val handler = CatchAll(\n    ValidationException::class to Status.BAD_REQUEST,\n    AuthorisationException::class to Status.NOT_FOUND\n).then(routes(...))\n"})}),"\n",(0,n.jsx)(t.h2,{id:"errorpages",children:"ErrorPages"}),"\n",(0,n.jsx)(t.p,{children:"Automatically renders a Pebble template for specified HTTP error statuses.\nThe HTTP status of the underlying response is preserved in the final response."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:'// Renders the template "error/404.peb"\nval httpHandler = ErrorPages(Status.NOT_FOUND to "error/404")\n    .then(routes(...))\n'})}),"\n",(0,n.jsx)(t.h2,{id:"statusoverride",children:"StatusOverride"}),"\n",(0,n.jsx)(t.p,{children:'Overrides HTTP response status codes. The example below combines the StatusOverride and ErrorPages filter to render a\n"page not found" response when the user attempts to access a secured resource.'}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:'// securityFilter returns a Status.FORBIDDEN when a user\n// tries to access a secure resource/page\nErrorPages(Status.NOT_FOUND to "error/404")\n.then(StatusOverride(Status.FORBIDDEN to Status.NOT_FOUND))\n.then(securityFilter)\n.then(routes)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"httpaccesslog-experimental",children:"HttpAccessLog (Experimental)"}),"\n",(0,n.jsx)(t.p,{children:"By default the filter logs:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Only HTTP transactions with error response statuses (4xx, 5xx)"}),"\n",(0,n.jsx)(t.li,{children:"All routes/paths"}),"\n",(0,n.jsx)(t.li,{children:"All headers"}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["This can be configured to log all HTTP transactions, ignore certain URI paths or exclude headers from being logged.\nYou can also log additional data points with each transaction, by providing an ",(0,n.jsx)(t.code,{children:"extraFields"})," lambda\nwith an ",(0,n.jsx)(t.a,{href:"https://www.http4k.org/api/org.http4k.core/-http-transaction/",children:"HttpTransaction"})," argument and returning\na ",(0,n.jsx)(t.code,{children:"Map<String, String>"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-kotlin",children:'val handler = HttpAccessLog(\n    allStatues = true,\n    ignorePaths = setOf("/admin"),\n    excludeHeaders = setOf("jwt-token"),\n    extraFields = { httpTransaction ->\n        mapOf("remoteIp" to httpTransaction.request.header(...))\n    }\n).then(routes)\n'})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>i,x:()=>o});var n=r(6540);const s={},a=n.createContext(s);function i(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);